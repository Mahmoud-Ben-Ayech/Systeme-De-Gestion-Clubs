package com.gestionClubs.controller;

import org.springframework.beans.factory.annotation.Autowired; 
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.gestionClubs.model.Event;
import com.gestionClubs.repository.EventRepository;

import net.bytebuddy.dynamic.DynamicType.Builder.FieldDefinition.Optional;
@CrossOrigin(origins="http://localhost:4200")
@RestController
@RequestMapping("/api")
public class EventController {

	@Autowired
	  private EventRepository eventRep;
	
	  @PostMapping("/creation")
	  public ResponseEntity<Event> submitAdd(@RequestBody Event event) {
	    try {
	    	Event _event=eventRep.save(new Event(event.getId(),event.getEventDate(),event.getOrganizer(),
		    		event.getPlace(),event.getAttendees(),event.getMaterialsNeeded(),event.getEventDate()));
			return new ResponseEntity<>(_event,HttpStatus.CREATED); 
	    } catch(Exception e) {
	    	return new ResponseEntity<>(null,HttpStatus.INTERNAL_SERVER_ERROR);
	    }
	  }
	  
	  
	  @DeleteMapping("/delete/{id}")
		public ResponseEntity<HttpStatus> deleteEvent(@PathVariable("id") long id) {
			try {
				eventRep.deleteById(id);
				return new ResponseEntity<>(HttpStatus.NO_CONTENT);
			} catch (Exception e) {
				return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
			}
		}
	  


	  

		  

	  
}
